import pandas as pd
from scipy import stats

pd.set_option('display.width', None)

df = pd.read_csv('dados_limpeza.csv')

df_filtro_basico = df[df['idade'] > 100] #idades acima de 100 são pessoas que provavelmente não existem

print('Filtro basico \n', df_filtro_basico[['nome', 'idade']]) #visualizar pra ver se tem sentido

#Identificar outliers com Z-score
z_scores = stats.zscore(df['idade'].dropna()) #dropna, caso não tivesse tratado, remover valores nulos
outliers_z = df[z_scores >= 3]
print('Outliers pelo Z-score:\n', outliers_z)

#Filtrar outliers com Z-score
df_zscore = df[(stats.zscore(df['idade']) <3)] #desvio padrão menor que 3

#Identificar outliers com IQR
Q1 = df['idade'].quantile(0.25)
Q3 = df['idade'].quantile(0.75)
IQR = Q3 - Q1 #excluir valores muito baixos e muito altos pra alcançar o "meio"

limite_baixo = Q1 - 1.5 * IQR   #valores padrao
limite_alto = Q3 - 1.5 * IQR

print('limites IQR: ', limite_baixo, limite_alto)

outliers_iqr = df[(df['idade'] < limite_baixo) | (df['idade'] > limite_alto)] # | ou
print('Outliers pelo IQR:\n', outliers_iqr)

#Filtrar outliers com IQR
df_iqr = df[(df['idade'] >= limite_baixo) & (df['idade'] <= limite_alto)] #visualizar o que nao é outlier

limite_baixo = 0
limite_alto = 100
df[(df['idade'] >= limite_baixo) & (df['idade'] <= limite_alto)]

#Filtrar endereços invalidos
df['endereco'] = df['endereco'].apply(lambda x: 'Endereço inválido' if len(x.split('\n')) <3 else x)    #split \n separa os campos, se for menor q 3 a pessoa digitou o endereço incompleto, else x (retorna o endereç)
print('Qtd registros com Endereço inválido:', (df['nome'] == 'Endereço inválido').sum())

#Tratar os campos de texto
df['nome'] = df['nome'].apply(lambda x: 'Nome inválido' if isinstance(x, str) and len(x) > 50 else x)   #se instancia é um texto e tamanho maior q 50 (texto mto grane) mostra nome invalido, se nao for mostra o proprio nome
print('Qtd registros com nomes grandes:', (df['nome'] == 'Nome inválido').sum())

print('Dados com Outliers tratados:\n', df)

#Salvar DataFrame
df.to_csv('dados_remove_outliers.csv', index=False)
